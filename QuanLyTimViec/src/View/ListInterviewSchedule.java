package View;

import Process.DataValidator;
import Process.InterviewSchedule;
import Process.InterviewScheduleDao;
import Process.MessageDialog;
import java.sql.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class ListInterviewSchedule extends javax.swing.JFrame {

    /**
     * Creates new form ListInterviewSchedule
     */
    private DefaultTableModel model;
    private int maLich;

    public ListInterviewSchedule() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        model = (DefaultTableModel) tblSCHEDULE.getModel();
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSCHEDULE = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        dtSTARTTIME = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        dtENDTIME = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        comboSTATUS = new javax.swing.JComboBox<>();
        txtSLOT = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaLOCATION = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btnUndo = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dubai", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Interview Schedule List");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, -1, -1));

        tblSCHEDULE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblSCHEDULE.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Start Date", "End Date", "Location", "Status", "Maximum Candidate"
            }
        ));
        tblSCHEDULE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSCHEDULEMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSCHEDULE);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 890, 252));

        jLabel2.setFont(new java.awt.Font("Dubai", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Start Date");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 78, -1));

        dtSTARTTIME.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(dtSTARTTIME, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 370, 140, -1));

        jLabel3.setFont(new java.awt.Font("Dubai", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("End Date");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 142, -1));

        dtENDTIME.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(dtENDTIME, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 370, 140, -1));

        jLabel5.setFont(new java.awt.Font("Dubai", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Status");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 78, -1));

        comboSTATUS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboSTATUS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Incompleted", "Completed" }));
        getContentPane().add(comboSTATUS, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 450, 140, -1));

        txtSLOT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(txtSLOT, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 450, 140, -1));

        jLabel4.setFont(new java.awt.Font("Dubai", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Location");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 370, -1, -1));

        txaLOCATION.setColumns(20);
        txaLOCATION.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txaLOCATION.setRows(5);
        jScrollPane3.setViewportView(txaLOCATION);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 370, 230, -1));

        jLabel6.setFont(new java.awt.Font("Dubai", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Maximum Candidate");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 450, -1, -1));

        jButton1.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jButton1.setText("See Interviewees");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 510, -1, -1));

        jButton2.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jButton2.setText("Add Schedule");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 510, -1, -1));

        jButton3.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jButton3.setText("Delete Schedule");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 510, -1, -1));

        jButton4.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        jButton4.setText("Change Schedule");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 510, -1, -1));

        btnUndo.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        btnUndo.setText("Back");
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });
        getContentPane().add(btnUndo, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 510, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/profilebg2.png"))); // NOI18N
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 980, 580));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSCHEDULEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSCHEDULEMouseClicked
        // TODO add your handling code here:
        int row = tblSCHEDULE.getSelectedRow();

        if (row >= 0) {
            int id = (int) tblSCHEDULE.getValueAt(row, 0);
            maLich = id;

            try {
                InterviewScheduleDao dao = new InterviewScheduleDao();
                InterviewSchedule result = dao.getInformation(maLich);

                dtSTARTTIME.setDate(result.getSTARTTIME());
                dtENDTIME.setDate(result.getENDTIME());
                comboSTATUS.setSelectedIndex(result.getSTATUS());
                txtSLOT.setText(String.valueOf(result.getSLOT()));
                txaLOCATION.setText(result.getLOCATION());
            } catch (Exception e) {
                MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
            }
        }
    }//GEN-LAST:event_tblSCHEDULEMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int choose = MessageDialog.showConfirmDialog(this, "Do you sure want to delete interview schedule?", "Confirm");
        if (choose == JOptionPane.YES_OPTION) {
            try {
                InterviewScheduleDao dao = new InterviewScheduleDao();
                if (dao.delete(maLich)) {
                    MessageDialog.showMessageDialog(this, "Deleted successfully!", "Notification");
                    LoadData();
                } else {
                    MessageDialog.showConfirmDialog(this, "Delete unsuccessfull!", "Notification");
                }
            } catch (Exception e) {
                MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtSLOT, sb, "Maximum candidate cannot be blank!");
        DataValidator.validateEmpty(txaLOCATION, sb, "Location cannot be blank");

        if (sb.length() > 0) {
            MessageDialog.showErrorDialog(this, sb.toString(), "Error");
            return;
        }

        if (txtSLOT.getText().length() > 0 && !txtSLOT.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Maximum candidate are numberous only!");
            return;
        }

        try {
            InterviewSchedule is = new InterviewSchedule();

            Date startdate = new Date(dtSTARTTIME.getDate().getTime());
            Date enddate = new Date(dtENDTIME.getDate().getTime());
            int status = comboSTATUS.getSelectedIndex();

            if (startdate.compareTo(enddate) > 0) {
                JOptionPane.showMessageDialog(this, "Starting date cannot be later than ending date!");
                return;
            }

            is.setSTARTTIME(startdate);
            is.setENDTIME(enddate);
            is.setLOCATION(txaLOCATION.getText());
            is.setSTATUS(status);
            is.setSLOT(Integer.parseInt(txtSLOT.getText()));

            InterviewScheduleDao dao = new InterviewScheduleDao();
            if (dao.insert(is)) {
                MessageDialog.showMessageDialog(this, "Added successfully!", "Notification");
                LoadData();
            } else {
                MessageDialog.showConfirmDialog(this, "Add unsuccessfully!", "Notification");
            }
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtSLOT, sb, "Maximum candidate cannot be blank!");
        DataValidator.validateEmpty(txaLOCATION, sb, "Location cannot be blank");

        if (sb.length() > 0) {
            MessageDialog.showErrorDialog(this, sb.toString(), "Error");
            return;
        }

        if (txtSLOT.getText().length() > 0 && !txtSLOT.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Maximum candidate are numberous only!");
            return;
        }

        try {
            InterviewSchedule is = new InterviewSchedule();

            Date startdate = new Date(dtSTARTTIME.getDate().getTime());
            Date enddate = new Date(dtENDTIME.getDate().getTime());
            int status = comboSTATUS.getSelectedIndex();

            is.setINTERVIEWSCHEDULENO(maLich);
            is.setSTARTTIME(startdate);
            is.setENDTIME(enddate);
            is.setLOCATION(txaLOCATION.getText());
            is.setSTATUS(status);
            is.setSLOT(Integer.parseInt(txtSLOT.getText()));

            InterviewScheduleDao dao = new InterviewScheduleDao();
            int choose = MessageDialog.showConfirmDialog(this, "Do you sure want to change interview schedule?", "Confirm");
            if (choose == JOptionPane.YES_OPTION) {
                if (dao.update(is)) {
                    MessageDialog.showMessageDialog(this, "Changed successfully!", "Notification");
                    LoadData();
                } else {
                    MessageDialog.showConfirmDialog(this, "Change unsuccessfully!", "Notification");
                }
            }
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed
        // TODO add your handling code here:
        InterviewerFrame i = new InterviewerFrame();
        i.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnUndoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ListApplicantRegister lar = new ListApplicantRegister(maLich);
        lar.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListInterviewSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListInterviewSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListInterviewSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListInterviewSchedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListInterviewSchedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUndo;
    private javax.swing.JComboBox<String> comboSTATUS;
    private com.toedter.calendar.JDateChooser dtENDTIME;
    private com.toedter.calendar.JDateChooser dtSTARTTIME;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblSCHEDULE;
    private javax.swing.JTextArea txaLOCATION;
    private javax.swing.JTextField txtSLOT;
    // End of variables declaration//GEN-END:variables

    private void LoadData() {
        try {
            InterviewScheduleDao dao = new InterviewScheduleDao();
            List<InterviewSchedule> list = dao.ListSchedule();
            model.setRowCount(0);
            for (InterviewSchedule x : list) {
                String trangthai;
                if (x.getSTATUS() == 0) {
                    trangthai = "Incompleted";
                } else {
                    trangthai = "Completed";
                }

                model.addRow(new Object[]{
                    x.getINTERVIEWSCHEDULENO(), x.getSTARTTIME(), x.getENDTIME(),
                    x.getLOCATION(), trangthai, x.getSLOT()});
            }
            model.fireTableDataChanged();
            tblSCHEDULE.setModel(model);
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
        }
    }
}

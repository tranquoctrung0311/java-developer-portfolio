package View;

import ConnectDB.ConnectOracle;
import java.sql.*;
import Process.DataValidator;
import Process.HaveSkill;
import Process.HaveSkillDao;
import Process.MessageDialog;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class CurriculumViate extends javax.swing.JFrame {

    /**
     * Creates new form CurriculumViate
     */
    private DefaultTableModel model;
    private Connection con;

    public CurriculumViate() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);

        model = (DefaultTableModel) tblHaveSkill.getModel();
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHaveSkill = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtSKILLNAME = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtYEARSOFEXPERIENCE = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        comboLEVEL_APL = new javax.swing.JComboBox<>();
        btnAdd = new javax.swing.JButton();
        btnDlt = new javax.swing.JButton();
        btnAlt = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnUndo = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CV DESCRIPTION");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        tblHaveSkill.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblHaveSkill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Skills", "Expertise Level", "Years Of Experience"
            }
        ));
        tblHaveSkill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHaveSkillMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHaveSkill);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 670, 296));

        jLabel2.setFont(new java.awt.Font("Dubai", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Skills");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 110, -1));

        txtSKILLNAME.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        getContentPane().add(txtSKILLNAME, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 190, -1));

        jLabel3.setFont(new java.awt.Font("Dubai", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Years Of Experience");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        txtYEARSOFEXPERIENCE.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        getContentPane().add(txtYEARSOFEXPERIENCE, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, 190, -1));

        jLabel4.setFont(new java.awt.Font("Dubai", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Expertise Level");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 380, -1, -1));

        comboLEVEL_APL.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        comboLEVEL_APL.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Experience", "Beginner", "Familiar", "Intermediate", "Advance", "Expert" }));
        comboLEVEL_APL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLEVEL_APLActionPerformed(evt);
            }
        });
        getContentPane().add(comboLEVEL_APL, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 380, -1, -1));

        btnAdd.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        btnAdd.setText("Add Skills");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        getContentPane().add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, -1, -1));

        btnDlt.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        btnDlt.setText("Delete Skills");
        btnDlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDltActionPerformed(evt);
            }
        });
        getContentPane().add(btnDlt, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 500, -1, -1));

        btnAlt.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        btnAlt.setText("Change Skills");
        btnAlt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAltActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlt, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 500, -1, -1));

        btnRefresh.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        getContentPane().add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 500, -1, -1));

        btnUndo.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        btnUndo.setText("Back");
        btnUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUndoActionPerformed(evt);
            }
        });
        getContentPane().add(btnUndo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 500, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/profilebg2.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 570));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboLEVEL_APLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLEVEL_APLActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboLEVEL_APLActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        txtSKILLNAME.setText("");
        txtYEARSOFEXPERIENCE.setText("");
        comboLEVEL_APL.setSelectedIndex(0);
        LoadData();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void tblHaveSkillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHaveSkillMouseClicked
        // TODO add your handling code here:
        int row = tblHaveSkill.getSelectedRow();

        if (row >= 0) {
            String name = (String) tblHaveSkill.getValueAt(row, 0);
            HaveSkillDao dao = new HaveSkillDao();
            HaveSkill hs = new HaveSkill();
            try {
                hs = dao.findBySkillName(name);
            } catch (Exception e) {
                MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
            }

            if (hs != null) {
                txtSKILLNAME.setText(hs.getSKILLNAME());
                txtYEARSOFEXPERIENCE.setText(String.valueOf(hs.getYEARSOFEXPERIENCE()));
                comboLEVEL_APL.setSelectedIndex(hs.getLEVEL_APL() - 1);

            }
        }
    }//GEN-LAST:event_tblHaveSkillMouseClicked

    private void btnUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUndoActionPerformed
        // TODO add your handling code here:
        ApplicantFrame app = new ApplicantFrame();
        app.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnUndoActionPerformed

    private void btnDltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDltActionPerformed
        try {
            // TODO add your handling code here:
            con = ConnectOracle.openConnection();
            con.setAutoCommit(false);

            StringBuilder sb = new StringBuilder();
            DataValidator.validateEmpty(txtSKILLNAME, sb, "Skills name cannot be blank!");

            if (sb.length() > 0) {
                MessageDialog.showErrorDialog(this, sb.toString(), "Error");
                return;
            }

            int choose = MessageDialog.showConfirmDialog(this, "Do you sure want to delete skills?", "Confirm");
            if (choose == JOptionPane.YES_OPTION) {
                try {
                    HaveSkillDao dao = new HaveSkillDao();
                    if (dao.delete(txtSKILLNAME.getText())) {
                        MessageDialog.showMessageDialog(this, "Deleted successfully!", "Notification");
                        LoadData();
                    } else {
                        MessageDialog.showConfirmDialog(this, "Delete unsuccessfully!", "Notification");
                    }
                } catch (Exception e) {
                    MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
                }
            }
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnDltActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        DataValidator.validateEmpty(txtSKILLNAME, sb, "Skills name cannot be blank!");
        DataValidator.validateEmpty(txtYEARSOFEXPERIENCE, sb, "Years of experience cannot be blank!");

        if (sb.length() > 0) {
            MessageDialog.showErrorDialog(this, sb.toString(), "Error");
            return;
        }

        if (txtYEARSOFEXPERIENCE.getText().length() > 0 && !txtYEARSOFEXPERIENCE.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Years of experience are numberous only!");
            return;
        }

        try {
            HaveSkill hs = new HaveSkill();
            int index = comboLEVEL_APL.getSelectedIndex();
            int level_apl = index + 1;

            hs.setSKILLNAME(txtSKILLNAME.getText());
            hs.setLEVEL_APL(level_apl);
            hs.setYEARSOFEXPERIENCE(Integer.parseInt(txtYEARSOFEXPERIENCE.getText()));

            HaveSkillDao dao = new HaveSkillDao();
            if (dao.insert(hs)) {
                MessageDialog.showMessageDialog(this, "Added succesfully!", "Notification");
                LoadData();
            } else {
                MessageDialog.showConfirmDialog(this, "Adde unsuccesfully!", "Notification");
            }
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnAltActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAltActionPerformed
        // TODO add your handling code here:
        try {
            HaveSkill hs = new HaveSkill();
            int index = comboLEVEL_APL.getSelectedIndex();
            int level_apl = index + 1;

            hs.setSKILLNAME(txtSKILLNAME.getText());
            hs.setLEVEL_APL(level_apl);
            hs.setYEARSOFEXPERIENCE(Integer.parseInt(txtYEARSOFEXPERIENCE.getText()));

            int choose = MessageDialog.showConfirmDialog(this, "Do you sure want to change skills?", "Confirm");
            if (choose == JOptionPane.YES_OPTION) {
                HaveSkillDao dao = new HaveSkillDao();
                if (dao.update(hs)) {
                    MessageDialog.showMessageDialog(this, "Changed successfully!", "Notification");
                    LoadData();
                } else {
                    MessageDialog.showConfirmDialog(this, "Change unsuccessfully!", "Notification");
                }
            }
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
        }
    }//GEN-LAST:event_btnAltActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CurriculumViate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CurriculumViate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CurriculumViate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CurriculumViate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CurriculumViate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAlt;
    private javax.swing.JButton btnDlt;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUndo;
    private javax.swing.JComboBox<String> comboLEVEL_APL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHaveSkill;
    private javax.swing.JTextField txtSKILLNAME;
    private javax.swing.JTextField txtYEARSOFEXPERIENCE;
    // End of variables declaration//GEN-END:variables

    private void LoadData() {
        try {
            HaveSkillDao dao = new HaveSkillDao();
            List<HaveSkill> list = dao.findByAccountID();
            model.setRowCount(0);
            for (HaveSkill x : list) {
                String trinhdo;
                int level = x.getLEVEL_APL();
                switch (level) {
                    case 1:
                        trinhdo = "No Experience";
                        break;
                    case 2:
                        trinhdo = "Beginner";
                        break;
                    case 3:
                        trinhdo = "Familiar";
                        break;
                    case 4:
                        trinhdo = "Intermediate";
                        break;
                    case 5:
                        trinhdo = "Advance";
                        break;
                    default:
                        trinhdo = "Expert";
                        break;
                }

                model.addRow(new Object[]{
                    x.getSKILLNAME(), trinhdo, x.getYEARSOFEXPERIENCE()});
            }

            model.fireTableDataChanged();
            tblHaveSkill.setModel(model);
        } catch (Exception e) {
            MessageDialog.showErrorDialog(this, e.getMessage(), "Error");
        }
    }
}

CREATE DATABASE QLTIMVIEC
GO
USE QLTIMVIEC
GO
--Tao bang POSITION va khoa chinh
create table POSITION (
	positionNo TINYINT IDENTITY(1,1) NOT NULL,
  	positionName VARCHAR(30) NOT NULL UNIQUE,
  	numberOfPersonnel TINYINT
)
ALTER TABLE POSITION ADD CONSTRAINT PK_POSITION PRIMARY KEY (positionNo)
GO

--Tao bang REQUIREMENT va khoa chinh
create table REQUIREMENT (
	requirementNo TINYINT IDENTITY(1,1) NOT NULL,
  	requirementName VARCHAR(50) NOT NULL UNIQUE,
)
ALTER TABLE REQUIREMENT ADD CONSTRAINT PK_REQUIREMENT PRIMARY KEY (requirementNo)
GO

--Tao bang REQUIRE va khoa chinh
create table REQUIRE (
	positionNo TINYINT NOT NULL,
  	requirementNo TINYINT NOT NULL,
	level TINYINT,
	yearsOfExperience TINYINT,

	CHECK (level BETWEEN 1 AND 6)
		 --1: Kém,
		 --2: Yếu,
		 --3: Trung bình,
		 --4: Khá,
		 --5: Giỏi,
		 --6: Chuyên sâu
)
ALTER TABLE REQUIRE ADD CONSTRAINT PK_REQUIRE PRIMARY KEY (positionNo, requirementNo)
GO

--Tao bang SKILL va khoa chinh
create table SKILL (
	skillNo TINYINT IDENTITY(1,1) NOT NULL,
  	skillName VARCHAR(50) NOT NULL UNIQUE,
)
ALTER TABLE SKILL ADD CONSTRAINT PK_SKILL PRIMARY KEY (skillNo)
GO

--Tao bang RECRUIT va khoa chinh
create table RECRUIT (
	departmentNo TINYINT NOT NULL,
  	positionNo TINYINT NOT NULL
)
ALTER TABLE RECRUIT ADD CONSTRAINT PK_RECRUIT PRIMARY KEY (departmentNo, positionNo)
GO

--Tao bang APPLICANT va khoa chinh
CREATE TABLE APPLICANT
(
	applicantNo TINYINT IDENTITY(1,1) NOT NULL,
	applicantName VARCHAR(30),
	citizenID VARCHAR(12) UNIQUE,
	dateOfBirth DATE,
	gender TINYINT,
	address VARCHAR(60),
	phoneNumber VARCHAR(10),
	gmail VARCHAR(30) UNIQUE,
	AccountID TINYINT,

	CHECK (gender BETWEEN 0 AND 1) 
		--0 : Nam 
		--1 : Nu
)
ALTER TABLE APPLICANT ADD CONSTRAINT PK_APPLICANT PRIMARY KEY (applicantNo)
GO

--Tao bang HAVE va khoa chinh
CREATE TABLE HAVE
(
	skillNo TINYINT NOT NULL,
	applicantNo TINYINT NOT NULL,
	level TINYINT,
	yearsOfExperience TINYINT,

	CHECK (level BETWEEN 1 AND 6)
		 --1: Kém,
		 --2: Yếu,
		 --3: Trung bình,
		 --4: Khá,
		 --5: Giỏi,
		 --6: Chuyên sâu
)
ALTER TABLE HAVE ADD CONSTRAINT PK_HAVE PRIMARY KEY (skillNo, applicantNo)
GO

--Tao bang REGISTER va khoa chinh
CREATE TABLE REGISTER
(
	interviewScheduleNo TINYINT NOT NULL,
	applicantNo TINYINT NOT NULL,
	positionNo TINYINT NOT NULL,
	status TINYINT,

	CHECK (status BETWEEN 0 AND 1)
	-- Sai trong word
		-- 0: Đã đăng ký
		-- 1: Đã hủy đăng ký
)
ALTER TABLE REGISTER ADD CONSTRAINT PK_REGISTER PRIMARY KEY (interviewScheduleNo, applicantNo, positionNo)
GO

--Tao bang EVALUATE_APL va khoa chinh
CREATE TABLE EVALUATE_APL
(
	companyNo TINYINT NOT NULL,
	applicantNo TINYINT NOT NULL,
	point TINYINT,
	comment VARCHAR(2000),

	CHECK (point BETWEEN 1 AND 5),
		 --1: Rất tệ,
		 --2: Không hài lòng,
		 --3: Bình thường,
		 --4: Hài lòng,
		 --5: Rất hài lòng
)
ALTER TABLE EVALUATE_APL ADD CONSTRAINT PK_EVALUATE_APL PRIMARY KEY (companyNo, applicantNo)
GO

--Tao bang EVALUATE_CO va khoa chinh
CREATE TABLE EVALUATE_CO
(
	companyNo TINYINT NOT NULL,
	applicantNo TINYINT NOT NULL,
	point TINYINT,
	comment VARCHAR(2000),

	CHECK (point BETWEEN 1 AND 5),
		 --1: Rất tệ,
		 --2: Không hài lòng,
		 --3: Bình thường,
		 --4: Hài lòng,
		 --5: Rất hài lòng
)
ALTER TABLE EVALUATE_CO ADD CONSTRAINT PK_EVALUATE_CO PRIMARY KEY (companyNo, applicantNo)
GO

--Tao bang BELONG va khoa chinh
CREATE TABLE BELONG
(
	departmentNo TINYINT NOT NULL,
	companyNo TINYINT NOT NULL
)
ALTER TABLE BELONG ADD CONSTRAINT PK_BELONG PRIMARY KEY (departmentNo, companyNo)
GO

--Tao bang COMPANY va khoa chinh
CREATE TABLE COMPANY
(
	companyNo TINYINT IDENTITY(1,1) NOT NULL,
	companyName VARCHAR(50) NOT NULL UNIQUE,
	address VARCHAR(60),
	hotline CHAR(10),
	gmail VARCHAR(30),
	startDate DATE,
	AccountID TINYINT
)
ALTER TABLE COMPANY ADD CONSTRAINT PK_COMPANY PRIMARY KEY (companyNo)
GO
 
--Tao bang DEPARTMENT va khoa chinh
CREATE TABLE DEPARTMENT
(
	departmentNo TINYINT IDENTITY(1,1) NOT NULL,
	departmentName VARCHAR(30) NOT NULL UNIQUE,
	describe VARCHAR(2000)
)
ALTER TABLE DEPARTMENT ADD CONSTRAINT PK_DEPARTMENT PRIMARY KEY (departmentNo)
GO

--Tao bang INTERVIEWER va khoa chinh
CREATE TABLE INTERVIEWER
(
	interviewerNo TINYINT IDENTITY(1,1) NOT NULL,
	interviewerName VARCHAR(30) NOT NULL,
	phoneNumber CHAR(10),
	gmail VARCHAR(30),
	companyNo TINYINT,
	AccountID TINYINT
)
ALTER TABLE INTERVIEWER ADD CONSTRAINT PK_INTERVIEWER PRIMARY KEY (interviewerNo)
GO

--Tao bang INTERVIEW_SCHEDULE va khoa chinh
CREATE TABLE INTERVIEW_SCHEDULE
(
	interviewScheduleNo TINYINT IDENTITY(1,1) NOT NULL,
	startTime DATE,
	endTime DATE,
	location  VARCHAR(60),
	status TINYINT,
	slot TINYINT,
	interviewerNo TINYINT,

	CHECK (status BETWEEN 0 AND 2)
		-- 0: Chưa hoàn thành
		-- 1: Đã hoàn thành
		-- 2: Đã đạt số lượng tối đa
)
ALTER TABLE INTERVIEW_SCHEDULE ADD CONSTRAINT PK_INTERVIEW_SCHEDULE PRIMARY KEY (interviewScheduleNo)
GO

-- Tạo bảng Account
CREATE TABLE ACCOUNT(
	AccountID TINYINT IDENTITY(1,1) NOT NULL,
	USERNAME VARCHAR(20) NOT NULL,
	PASSWORD VARCHAR(50) NOT NULL,
	ROLE	 VARCHAR(20) NOT NULL,
	LINKIMAGE	 VARCHAR(1000) NOT NULL
)
GO
ALTER TABLE ACCOUNT ADD CONSTRAINT PK_ACC PRIMARY KEY (AccountID)
GO

--Tao khoa ngoai
--Bang REQUIRE
ALTER TABLE REQUIRE ADD CONSTRAINT FK1_REQUIRE FOREIGN KEY (positionNo) REFERENCES POSITION(positionNo)
ALTER TABLE REQUIRE ADD CONSTRAINT FK2_REQUIRE FOREIGN KEY (requirementNo) REFERENCES REQUIREMENT(requirementNo)
GO

--Bang HAVE
ALTER TABLE HAVE ADD CONSTRAINT FK1_HAVE FOREIGN KEY (skillNo) REFERENCES SKILL(skillNo)
ALTER TABLE HAVE ADD CONSTRAINT FK2_HAVE FOREIGN KEY (applicantNo) REFERENCES APPLICANT(applicantNo)
GO

--Bang RECRUIT
ALTER TABLE RECRUIT ADD CONSTRAINT FK1_RECRUIT FOREIGN KEY (departmentNo) REFERENCES DEPARTMENT(departmentNo)
ALTER TABLE RECRUIT ADD CONSTRAINT FK2_RECRUIT FOREIGN KEY (positionNo) REFERENCES POSITION(positionNo)
GO

--Bang REGISTER
ALTER TABLE REGISTER ADD CONSTRAINT FK1_REGISTER FOREIGN KEY (interviewScheduleNo) REFERENCES INTERVIEW_SCHEDULE (interviewScheduleNo)
ALTER TABLE REGISTER ADD CONSTRAINT FK2_REGISTER FOREIGN KEY (applicantNo) REFERENCES APPLICANT (applicantNo)
ALTER TABLE REGISTER ADD CONSTRAINT FK3_REGISTER FOREIGN KEY (positionNo) REFERENCES POSITION (positionNo)
GO

--Bang EVALUATE_APL
ALTER TABLE EVALUATE_APL ADD CONSTRAINT FK1_EVALUATE_APL FOREIGN KEY (companyNo) REFERENCES COMPANY (companyNo)
ALTER TABLE EVALUATE_APL ADD CONSTRAINT FK2_EVALUATE_APL FOREIGN KEY (applicantNo) REFERENCES APPLICANT (applicantNo)
GO

--Bang EVALUATE_CO
ALTER TABLE EVALUATE_CO ADD CONSTRAINT FK1_EVALUATE_CO FOREIGN KEY (companyNo) REFERENCES COMPANY (companyNo)
ALTER TABLE EVALUATE_CO ADD CONSTRAINT FK2_EVALUATE_CO FOREIGN KEY (applicantNo) REFERENCES APPLICANT (applicantNo)
GO

--Bang BELONG
ALTER TABLE BELONG ADD CONSTRAINT FK1_BELONG FOREIGN KEY (departmentNo) REFERENCES DEPARTMENT (departmentNo)
ALTER TABLE BELONG ADD CONSTRAINT FK2_BELONG FOREIGN KEY (companyNo) REFERENCES COMPANY (companyNo)
GO

--Bang INTERVIEWER
ALTER TABLE INTERVIEWER ADD CONSTRAINT FK_INTERVIEWER FOREIGN KEY (companyNo) REFERENCES COMPANY (companyNo)
GO

--Bang INTERVIEW_SCHEDULE
ALTER TABLE INTERVIEW_SCHEDULE ADD CONSTRAINT FK_INTERVIEW_SCHEDULE FOREIGN KEY (interviewerNo) REFERENCES INTERVIEWER (interviewerNo)
GO

-- Bang COMPANY
ALTER TABLE COMPANY ADD CONSTRAINT FK_COMPANY_ACCOUNT FOREIGN KEY (AccountID) REFERENCES ACCOUNT (AccountID);


-- Bang INTERVIEWER
ALTER TABLE INTERVIEWER ADD CONSTRAINT FK_INTERVIEWER_ACCOUNT FOREIGN KEY (AccountID) REFERENCES ACCOUNT (AccountID);

-- BANG APPLICANT
ALTER TABLE APPLICANT ADD CONSTRAINT FK_APPLICANT_ACCOUNT FOREIGN KEY (AccountID) REFERENCES ACCOUNT (AccountID);